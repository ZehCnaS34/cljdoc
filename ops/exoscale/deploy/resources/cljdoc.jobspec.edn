;; we convert this edn to json when we send it to nomad via deploy.clj
{:Job
 {:Datacenters ["dc1"]
  :ID "cljdoc"
  :Name "cljdoc"
  :TaskGroups
  [{:Count 1
    :Name "cljdoc"
    :RestartPolicy {:Attempts 2
                    :Delay #nomad/seconds 15
                    :Interval #nomad/seconds 1800
                    :Mode "fail"}
    :Networks [{:DynamicPorts [{:Label "http" :To 8000}
                               {:Label "jmx" :To 9010}]}]
    :Tasks
    [{:Artifacts nil
      :Config {:image #join ["cljdoc/cljdoc:" #cljdoc.deploy/opt :docker-tag]
               :ports ["http" "jmx"]
               :volumes ["secrets:/etc/cljdoc"
                         "/data/cljdoc:/var/cljdoc"]}
      :Driver "docker"
      :Env {:CLJDOC_SECRETS "/etc/cljdoc/secrets.edn"
            :CLJDOC_PROFILE #cljdoc.deploy/opt :cljdoc-profile}
      :KillSignal ""
      :Name "backend"
      :Resources {:CPU 2000 :MemoryMB 3648}
      :Services [{:Name "cljdoc"
                  :PortLabel "http"
                  :Checks [{:Name "alive"
                            :PortLabel "http"
                            :Interval #nomad/seconds 10
                            :Timeout #nomad/seconds 2
                            :Type "tcp"}]
                  ;; traefik is now configured through service tags
                  :Tags
                  ["traefik.enable=true"
                   ;; jmx (only acessible locally)
                   "traefik.tcp.routers.jxm-router.entrypoints=jmx"
                   "traefik.tcp.routers.jmx-router.rule=HostSNI(`*`)"
                   "traefik.tcp.routers.jmx-router.service=jmx-service"
                   "traefik.tcp.services.jmx-service.loadbalancer.server.port=${NOMAD_HOST_PORT_jmx}"
                   ;; http
                   "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                   "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
                   "traefik.http.routers.cljdoc-http.entrypoints=web"
                   "traefik.http.routers.cljdoc-http.middlewares=redirect-to-https"
                   "traefik.http.routers.cljdoc-http.rule=PathPrefix(`/`)"
                   ;; https
                   "traefik.http.middlewares.compress-response.compress=true"
                   "traefik.http.middlewares.compress-response.compress.encodings=gzip"
                   "traefik.http.routers.cljdoc-https.entrypoints=websecure"
                   "traefik.http.routers.cljdoc-https.tls=true"
                   "traefik.http.routers.cljdoc-https.tls.certresolver=letsencrypt"
                   "traefik.http.routers.cljdoc-https.rule=PathPrefix(`/`)"
                   "traefik.http.routers.cljdoc-https.tls.domains[0].main=cljdoc.org"
                   "traefik.http.routers.cljdoc-https.tls.domains[1].main=cljdoc.xyz"
                   "traefik.http.middlewares.xyz-redirect.redirectregex.permanent=true"
                   "traefik.http.middlewares.xyz-redirect.redirectregex.regex=^https://.*cljdoc\\.xyz(.*)"
                   "traefik.http.middlewares.xyz-redirect.redirectregex.replacement=https://cljdoc.org${1}"
                   "traefik.http.routers.cljdoc-https.middlewares=xyz-redirect,compress-response"]}]
      :Templates [{:DestPath "secrets/secrets.edn"
                   :EmbeddedTmpl "{{key \"config/cljdoc/secrets-edn\"}}"}]}]
    :Update {:Canary 1
             :MaxParallel 1
             :HealthyDeadline #nomad/seconds 240
             :MinHealthyTime #nomad/seconds 10}}
   {:Name "lb"
    :Networks [{:ReservedPorts [{:Label "api" :Value 8080}
                                {:Label "http" :Value 80}
                                {:Label "https" :Value 443}]}]
    :Tasks
    [{:Config {:image "traefik:3.2.1"
               :network_mode "host"
               :ports ["api" "http" "https"]
               :volumes ["local:/etc/traefik"
                         "/data/traefik:/data"]}
      :Driver "docker"
      :Name "traefik"
      :Resources {:CPU 200 :MemoryMB 256}
      :Services [{:Name "traefik"
                  :PortLabel "http"
                  :Checks [{:Name "alive"
                            :Interval #nomad/seconds 10
                            :Timeout #nomad/seconds 2
                            :Type "tcp"}]}]
      :Templates [{:DestPath "local/traefik.yaml"
                   :EmbeddedTmpl "{{key \"config/traefik-yaml\"}}"}]}]}]
  :Type "service"}}
